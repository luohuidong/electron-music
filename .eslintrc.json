{
  "root": true,
  "env": {
    "browser": true,
    "es6": true,
    "node": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "project": "./tsconfig.json",
    "projectFolderIgnoreList": ["/node_modules/"],
    "tsconfigRootDir": "./",
    "sourceType": "module"
  },
  "plugins": ["@typescript-eslint"],
  "rules": {
    "linebreak-style": ["error", "unix"],
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/indent": [
      "error",
      2,
      {
        "SwitchCase": 1
      }
    ]
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "settings": {
    "settings": {
      "react": {
        "createClass": "createReactClass", // Regex for Component Factory to use,
        // default to "createReactClass"
        "pragma": "React", // Pragma to use, default to "React"
        "version": "detect" // React version. "detect" automatically picks the version you have installed.
        // You can also use `16.0`, `16.3`, etc, if you want to override the detected value.
        // default to latest and warns if missing
        // It will default to "detect" in the future
      },
      "propWrapperFunctions": [
        // The names of any function used to wrap propTypes, e.g. `forbidExtraProps`. If this isn't set, any propTypes wrapped in a function will be skipped.
        "forbidExtraProps",
        {
          "property": "freeze",
          "object": "Object"
        },
        {
          "property": "myFavoriteWrapper"
        }
      ],
      "linkComponents": [
        // Components used as alternatives to <a> for linking, eg. <Link to={ url } />
        "Hyperlink",
        {
          "name": "Link",
          "linkAttribute": "to"
        }
      ]
    }
  }
}
